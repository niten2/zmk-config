/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/ext_power.h>
#define DEF 0
#define LWR 1
#define RSE 2
#define ADJ 3

&lt { quick_tap_ms = <200>; };
&mt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_F2 {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp F2>;
        };
        combo_ENTER {
            timeout-ms = <50>;
            key-positions = <3 4>;
            bindings = <&kp ENTER>;
        };
         combo_BS {
            timeout-ms = <50>;
            key-positions = <4 5>;
            bindings = <&kp BSPC>;
        };
        combo_Del {
            timeout-ms = <50>;
            key-positions = <28 29>;
            bindings = <&kp DEL>;
        };
    };
};


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -------------------------------------------------------------------------------------
// | ESС  |  Q  |  W  |  E  |  R  |  T  |·········|  Y   |  U   |  I  |  O  |  P  |  [  |
// | SHFT |  A  |  S  |  D  |  F  |  G  |·········|  H   |  J   |  K  |  L  |  ;  |  '  |
// | CTRL |  Z  |  X  |  C  |  V  |  B  |·········|  N   |  M   |  ,  |  .  |  /  |  ]  |
//                          | ALT | LWR | RSE_SPC | BKSP | WIN  |
                        bindings = <
   &kp ESC    &kp Q       &kp W       &kp E        &kp R        &kp T         &kp Y  &kp U        &kp I        &kp O       &kp P          &kp LBKT
   &kp LSHFT  &hm LGUI A  &hm LALT S  &hm LCTRL D  &hm LSHFT F  &kp G         &kp H  &hm LSHFT J  &hm LCTRL K  &hm LALT L  &hm LGUI SEMI  &kp SQT
   &kp LCTRL  &kp Z       &kp X       &kp C        &kp V        &kp B         &kp N  &kp M        &kp COMMA    &kp DOT     &kp FSLH       &kp RBKT
                                                 &kp LALT  &mo LWR &lt RSE SPACE &kp BSPC  &kp LWIN
                        >;
                };

                lower_layer {
// ----------------------------------------------------------------------------------
// |  TAB  |   !    |   @   |  #   |   $   |  %   |···········|    ^   |   &  |    *   |  (  |  )  |  DEL  |
// |  SHFT |   F4   | LEFT  |  UP  | RIGHT | HOME |···········| vol up | mute | vol dn |     |     |   ~   |
// |  CTRL | CTRL+N | PG_UP | DOWN | PG_DN | END  |···········|  prev  | play |  next  |     |     |   \   |
//                                 |  ALT  |      | ADJ_ENTER |        |      |
                        bindings = <
   &kp TAB    &kp EXCL  &kp AT     &kp HASH &kp DLLR  &kp PRCNT    &kp CARET    &kp AMPS   &kp STAR     &kp LPAR   &kp RPAR  &kp DEL
   &kp LSHFT  &kp F4    &kp LEFT   &kp UP   &kp RIGHT &kp HOME     &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &trans     &trans    &kp GRAVE
   &kp LCTRL  &kp LC(N) &kp PG_UP  &kp DOWN &kp PG_DN &kp END      &kp C_PREV   &kp C_PP   &kp C_NEXT   &trans     &trans    &kp BSLH
                                   &kp LALT &trans       &lt ADJ ENTER          &trans     &trans
                        >;
                };

                raise_layer {
// ----------------------------------------------------------------------------------------
// |  F2  |  *  |  1  |  2  |  3  |  -  |·········|     | F1 | F2  | F3  | F4  | DEL |
// | SHFT |  /  |  4  |  5  |  6  |  +  |·········|     | F5 | F6  | F7  | F8  |  ~  |
// | CTRL |  =  |  7  |  8  |  9  |  .  |·········|     | F9 | F10 | F11 | F12 |  \  |
//                          |  0  | ADJ |         |     |    |
                        bindings = <
   &kp F2    &kp KP_ASTERISK &kp N1 &kp N2 &kp N3 &kp MINUS             &trans &kp F1  &kp F2  &kp F3  &kp F4  &kp DEL
   &kp LSHFT &kp KP_SLASH    &kp N4 &kp N5 &kp N6 &kp KP_PLUS           &trans &kp F5  &kp F6  &kp F7  &kp F8  &kp GRAVE
   &kp LCTRL &kp EQUAL       &kp N7 &kp N8 &kp N9 &kp KP_DOT            &trans &kp F9  &kp F10 &kp F11 &kp F12 &kp BSLH
                                           &kp N0 &mo ADJ    &trans  &trans &trans
                        >;
                };

                ADJust_layer {
// -----------------------------------------------------------------------------------------
// | RGB BRI+ | RGB SAT+ | RGB HUE+ | RGB ANI+ |         | RGB TOG |·········|  BT1  |  BT2  |  BT3  |  BT4  |  BT5  | BT CLR |
// | RGB BRI- | RGB SAT- | RGB HUE- | RGB ANI+ |         |         |·········|       |       |       |       |       |        |
// |          |          |          |          |         |         |·········|       |       |       |       |       | EXT_POWER_TOGGLE_CMD |
//                                             |         |         |         |  F23  |  F24  |
                        bindings = <
   &rgb_ug RGB_BRI &rgb_ug RGB_SAI &rgb_ug RGB_HUI &rgb_ug RGB_EFF &none &rgb_ug RGB_TOG     &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4 &bt BT_CLR
   &rgb_ug RGB_BRD &rgb_ug RGB_SAD &rgb_ug RGB_HUD &rgb_ug RGB_EFR &none &none               &none        &none        &none        &none        &none        &none
   &none           &none           &none           &none           &none &none               &none        &none        &none        &none        &none        &ext_power EP_TOG
                                                             &trans      &trans    &trans    &kp F23      &kp F24
                        >;
                };
        };
};
